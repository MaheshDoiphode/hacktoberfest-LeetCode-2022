/*
Given a sorted integer array arr, two integers k and x, return the k closest integers to x in the array. The result should also be sorted in ascending order.

An integer a is closer to x than an integer b if:

|a - x| < |b - x|, or
|a - x| == |b - x| and a < b
 

Example 1:

Input: arr = [1,2,3,4,5], k = 4, x = 3
Output: [1,2,3,4]
Example 2:

Input: arr = [1,2,3,4,5], k = 4, x = -1
Output: [1,2,3,4]
 

Constraints:

1 <= k <= arr.length
1 <= arr.length <= 104
arr is sorted in ascending order.
-104 <= arr[i], x <= 104
*/
class Solution{
public:
    vector<int> findClosestElements(vector<int>& arr, int k, int x) {
        vector<pair<int,int>>values; // creating a pair of vectors to store the abs diff and the value
        for(int i=0; i<arr.size(); i++){ // for loop to calculate the pair of vectors
            pair<int,int>s;
            s.first = abs(arr[i]-x);
            s.second = arr[i];
            values.push_back(s);
        }
        sort(values.begin(), values.end());// sort the values according to the first element of the vector.
        vector<int>ans;
        for(int i=0; i<k; i++){
            ans.push_back(vaulues[i].second);
        }
        sort(ans.begin(),ans.end());
        return ans;
    }
};